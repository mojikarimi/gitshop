"""
Django settings for gitshop project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
from django.contrib.messages import constants as messages
import os.path
from pathlib import Path
from SecureSettings import *

# Build paths inside the project like this: BASE_DIR / 'subdir'.

BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = secret_key
from django.core.signing import Signer

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    # django app
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.sites',
    # my app
    'Main.apps.MainConfig',
    'Panel.apps.PanelConfig',
    'Account.apps.AccountConfig',
    'Profile.apps.ProfileConfig',
    'Blog.apps.BlogConfig',
    'Shop.apps.ShopConfig',
    # install app
    'django_recaptcha.apps.DjangoRecaptchaConfig',
    'widget_tweaks',
    # 'rest_framework',
]

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
    },
    "mycache": {
        "BACKEND": "django.core.cache.backends.filebased.FileBasedCache",
        "LOCATION": "/var/tmp/django_cache",
        "TIMEOUT": 60,
    }
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',

    "django.contrib.auth.middleware.RemoteUserMiddleware",
    'gitshop.CustomMiddleware.CustomHeaderMiddleware',  # custom middleware

    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]
AUTHENTICATION_BACKENDS = {
    "django.contrib.auth.backends.RemoteUserBackend",
    'django.contrib.auth.backends.ModelBackend',
    'django.contrib.auth.backends.AllowAllUsersModelBackend',
}
ROOT_URLCONF = 'gitshop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'Main.context_processor.context_processor',
                'Main.context_processor.context_processor_chat'

            ],
        },
    },
]

WSGI_APPLICATION = 'gitshop.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
DATABASE_ROUTERS = ['Shop.router.ShopRouter', 'Profile.router.ProfileRouter', 'Blog.router.BlogRouter']
DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'gitshop.sqlite3',
    # },
    'default': {'ENGINE': 'django.db.backends.postgresql',
                'NAME': defaultdb_NAME,
                'USER': defaultdb_USER,
                'PASSWORD': defaultdb_PASSWORD,
                'HOST': defaultdb_HOST,
                'PORT': '5432'},
    'blog': {
        "ENGINE": "mssql",
        "NAME": blogdb_NAME,
        "USER": blogdb_USER,
        "PASSWORD": blogdb_PASSWORD,
        "HOST": blogdb_HOST,
        "PORT": "1433",
        "OPTIONS": {"driver": "ODBC Driver 17 for SQL Server",
                    },
        'TEST': {
            'MIRROR': 'blog',
        },
    },
    'shop': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'gitshop_shop.sqlite3',

    },
    'profile': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'gitshop_profile.sqlite3',
    }
}

# # Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },

]
# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
MEDIA_URL = 'Media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'Media')
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# aler messages

MESSAGE_TAGS = {
    messages.ERROR: 'danger',
}
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = False
EMAIL_PORT = 465
EMAIL_USE_SSL = True
EMAIL_HOST_USER = email_host_user
EMAIL_HOST_PASSWORD = email_host_password
# site ID
SITE_ID = 1

# custom user model
AUTH_USER_MODEL = 'Account.CustomUser'
# RECAPTCHA google
RECAPTCHA_PUBLIC_KEY = recaptcha_public_key
RECAPTCHA_PRIVATE_KEY = recaptcha_private_key

# URL login
LOGIN_URL = 'signin'

